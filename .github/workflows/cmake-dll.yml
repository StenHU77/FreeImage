name: "CMake build with dll artifact"

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.toolchain }} (C++${{ matrix.cppstandard }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        toolchain:
#          - linux-gcc
#          - macos-clang
          - windows-msvc
#          - windows-mingw
        cppstandard:
          - 11
#          - 14
#          - 17
#          - 20
#          - 23
        cstandard:
          - 11
#          - 17
        configuration:
          - Release
        include:
#          - toolchain: linux-gcc
#            os: ubuntu-latest
#            compiler: gcc
#          - toolchain: macos-clang
#            os: macos-latest
#            compiler: clang
          - toolchain: windows-msvc
            os: windows-latest
            compiler: msvc
#          - toolchain: windows-mingw
#            os: windows-latest
#            compiler: mingw
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install getopt using Chocolatey
        run: |
          choco install getopt -y
      - name: Refresh environment variables
        run: |
          export PATH=$PATH:/c/Users/runneradmin/AppData/Local/Temp/chocolatey/chocolatey/getopt
      - name: Verify getopt installation
        run: |
          where getopt || echo "getopt not found!"
      - name: Configure (${{ matrix.configuration }})
        run: |
          if [ "${{ matrix.compiler }}" == "msvc" ]; then
            cmake -S . -B build -DCMAKE_CXX_STANDARD=${{ matrix.cppstandard }} -DCMAKE_INSTALL_PREFIX=install_dir -DBUILD_SHARED_LIBS=ON -A x64
          elif [ "${{ matrix.compiler }}" == "mingw" ]; then
            cmake -S . -B build -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DUNICODE=ON -D_UNICODE=ON -DCMAKE_CXX_STANDARD=${{ matrix.cppstandard }} -DCMAKE_C_STANDARD=${{ matrix.cstandard }} -G "MinGW Makefiles"
          else
            cmake -S . -B build -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DUNICODE=ON -D_UNICODE=ON -DCMAKE_CXX_STANDARD=${{ matrix.cppstandard }} -DCMAKE_C_STANDARD=${{ matrix.cstandard }}
          fi
      - name: Build with ${{ matrix.compiler }}
        run: |
          if [ "${{ matrix.compiler }}" == "msvc" ]; then
            cmake --build build --config ${{ matrix.configuration }} --target install
          else
            cmake --build build -- -j8
          fi
      - name: Upload DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: FreeImage-DLL${{ matrix.toolchain }}${{ matrix.cppstandard }}${{ matrix.os }}
          path: install_dir/
